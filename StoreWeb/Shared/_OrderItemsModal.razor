@inject IOrderService OrderService

<div class="modal fade" id="orderItemsModal" tabindex="-1" role="dialog" aria-labelledby="orderItemsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderItemsModalLabel">Order Items</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (IsLoading)
                {
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
                else if (OrderItems != null && OrderItems.Any())
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in OrderItems)
                            {
                                <tr>
                                    <td>@item.ProductName</td>
                                    <td>@item.Amount</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>No items found for this order.</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int OrderId { get; set; }

    private bool IsLoading { get; set; }
    private List<OrderItemDTO> OrderItems { get; set; } = new List<OrderItemDTO>();

    protected override async Task OnParametersSetAsync()
    {
        IsLoading = true;
        OrderItems = await OrderService.GetOrderItems(OrderId);
        IsLoading = false;
    }
}
