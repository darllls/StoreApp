@page "/customers"
@inject ICustomerService _customerService
@inject NavigationManager _nav

<div class="row mb-3">
    <div class="col-md-4">
        <select class="form-select" @bind="selectedCustomerTypeId">
            <option value="">All Types</option>
            @foreach (var customerType in CustomerTypes)
            {
                <option value="@customerType.CustomerTypeId">@customerType.TypeName</option>
            }
        </select>
    </div>
    <div class="col-md-4">
        <input type="text" class="form-control" placeholder="Search..." @bind="searchText" />
    </div>
    <div class="col-md-4 text-right">
        <button class="btn btn-success" @onclick="CreateCustomer">Create</button>
    </div>
</div>

@if (IsProcessing)
{
    <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Type</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in FilteredCustomers)
            {
                <tr>
                    <td>@customer.FirstName</td>
                    <td>@customer.LastName</td>
                    <td>@customer.Email</td>
                    <td>@customer.Phone</td>
                    <td>@customer.CustomerTypeName</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditCustomer(customer.CustomerId)">Edit</button>
                        <button class="btn btn-danger " @onclick="() => DeleteCustomer(customer.CustomerId)">Delete</button>
                        <button class="btn btn-link " @onclick="() => DeleteCustomer(customer.CustomerId)">View Orders</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public bool IsProcessing { get; set; } = false;
    public IEnumerable<CustomerDTO> Customers { get; set; } = new List<CustomerDTO>();
    public string searchText { get; set; } = "";
    private int? selectedCustomerTypeId { get; set; }
    public IEnumerable<CustomerTypeDTO> CustomerTypes { get; set; } = new List<CustomerTypeDTO>();

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Customers = await _customerService.GetAllCustomers();
        CustomerTypes = await _customerService.GetAllCustomerTypes();
        IsProcessing = false;
    }

    public IEnumerable<CustomerDTO> FilteredCustomers =>
    Customers.Where(c =>
        (string.IsNullOrWhiteSpace(searchText) ||
            c.FirstName.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
            c.LastName.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
            c.Email.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
            c.Phone.Contains(searchText, StringComparison.OrdinalIgnoreCase)) &&
        (selectedCustomerTypeId == null || c.CustomerTypeId == selectedCustomerTypeId));

    private void CreateCustomer()
    {
        // Navigate to create customer page
        _nav.NavigateTo("/create-customer");
    }

    private void EditCustomer(int customerId)
    {
        // Navigate to edit customer page
        _nav.NavigateTo($"/edit-customer/{customerId}");
    }

    private async Task DeleteCustomer(int customerId)
    {
        // var confirmDelete = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this customer?");
        // if (confirmDelete)
        // {
        //     var result = await _customerService.DeleteCustomer(customerId);
        //     if (result)
        //     {
        //         Customers = Customers.Where(c => c.CustomerId != customerId).ToList();
        //     }
        //     else
        //     {
        //         // Handle delete failure
        //     }
        // }
    }
}
